{"version":3,"sources":["common/SiderMenu.js","App.js","reportWebVitals.js","index.js"],"names":["Sider","Layout","SubMenu","Menu","SiderMenu","currMenuNo","selMenuEvent","menuList","useState","collapsed","setCollapsed","style","height","marginTop","marginLeft","color","transition","logoStyle","wordBreak","opacity","titleVisibility","undefined","menuItems","setMenuItems","tempMenuItem","map","item","index","subMenu","tempSubMenuItems","subItem","subIndex","concat","Item","onClick","menuCode","menuName","icon","UserOutlined","title","children","GithubOutlined","renderSiderMenu","collapsible","onCollapse","ExperimentOutlined","fontSize","size","theme","defaultSelectedKeys","mode","Header","Content","Footer","App","breadcrumb","navProps","breadcrumbList","console","log","minHeight","val","background","paddingLeft","margin","padding","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dad2d447.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n\tExperimentOutlined,\r\n\tDesktopOutlined,\r\n\tGithubOutlined,\r\n\tFileOutlined,\r\n\tTeamOutlined,\r\n\tUserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderMenu = ({ currMenuNo, selMenuEvent, menuList }) => {\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\r\n\tconst [logoStyle, setLogoStyle] = useState({\r\n\t\tstyle: {\r\n\t\t\theight: \"32px\",\r\n\t\t\tmarginTop: \"22px\",\r\n\t\t\tmarginLeft: \"22px\",\r\n\t\t\tcolor: \"#fff\",\r\n\t\t\ttransition: \"margin 0.29s\",\r\n\t\t},\r\n\t});\r\n\r\n\tconst [titleVisibility, setTitleVisibility] = useState({\r\n\t\tstyle: {\r\n\t\t\twordBreak: \"keep-all\",\r\n\t\t\topacity: 100,\r\n\t\t\ttransition:\r\n\t\t\t\t\"opacity 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), margin 0.3s, color 0.3s\",\r\n\t\t},\r\n\t});\r\n\r\n\tconst onCollapse = () => {\r\n\t\tlogoStyle.style = {\r\n\t\t\theight: !collapsed ? \"34px\" : \"32px\",\r\n\t\t\tmarginTop: !collapsed ? \"22px\" : \"24px\",\r\n\t\t\tmarginLeft: !collapsed ? \"31px\" : \"22px\",\r\n\t\t\tcolor: \"#fff\",\r\n\t\t\ttransition: !collapsed ? \"margin 0.29s\" : \"margin 0.29s\",\r\n\t\t};\r\n\r\n\t\ttitleVisibility.style = {\r\n\t\t\twordBreak: \"keep-all\",\r\n\t\t\topacity: !collapsed ? 0 : 100,\r\n\t\t\ttransition:\r\n\t\t\t\t\"opacity 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), margin 0.3s, color 0.3s\",\r\n\t\t};\r\n\r\n\t\tsetCollapsed(!collapsed);\r\n\t};\r\n\r\n\tconst [menuItems, setMenuItems] = useState(undefined);\r\n\r\n\tconst renderSiderMenu = () => {\r\n\t\tlet tempMenuItem = [];\r\n\r\n\t\tmenuList.map((item, index) => {\r\n\t\t\tif (!item.subMenu) {\r\n\t\t\t\ttempMenuItem = tempMenuItem.concat(\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tkey={item.menuCode}\r\n\t\t\t\t\t\ticon={<GithubOutlined />}\r\n\t\t\t\t\t\tonClick={() => selMenuEvent(item.menuCode)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item.menuName}\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlet tempSubMenuItems = [];\r\n\r\n\t\t\t\titem.subMenu.map((subItem, subIndex) => {\r\n\t\t\t\t\ttempSubMenuItems = tempSubMenuItems.concat(\r\n\t\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\t\tkey={`subMenuItem${index}${subIndex}${subItem.menuCode}`}\r\n\t\t\t\t\t\t\tonClick={() => selMenuEvent(subItem.menuCode)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{subItem.menuName}\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttempMenuItem = tempMenuItem.concat(\r\n\t\t\t\t\t<SubMenu\r\n\t\t\t\t\t\tkey={`subMenu${index}`}\r\n\t\t\t\t\t\ticon={<UserOutlined />}\r\n\t\t\t\t\t\ttitle={item.menuName}\r\n\t\t\t\t\t\tchildren={tempSubMenuItems}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsetMenuItems(tempMenuItem);\r\n\t};\r\n\r\n\tuseState(() => {\r\n\t\trenderSiderMenu();\r\n\t}, menuList);\r\n\r\n\treturn (\r\n\t\t<Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n\t\t\t<div {...logoStyle}>\r\n\t\t\t\t<ExperimentOutlined\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tcolor: \"#fff\",\r\n\t\t\t\t\t\tfontSize: \"150%\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsize='large'\r\n\t\t\t\t\ttitle='실험실'\r\n\t\t\t\t/>\r\n\t\t\t\t<span {...titleVisibility}>&nbsp;실험실</span>\r\n\t\t\t</div>\r\n\t\t\t<Menu theme='dark' defaultSelectedKeys={[\"1\"]} mode='inline'>\r\n\t\t\t\t{menuItems}\r\n\t\t\t</Menu>\r\n\t\t</Sider>\r\n\t);\r\n};\r\n\r\nexport default SiderMenu;\r\n","import React, { Fragment, useState } from \"react\";\nimport { Layout, Breadcrumb } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport SiderMenu from \"./common/SiderMenu.js\";\n\nconst { Header, Content, Footer } = Layout;\n\nconst App = () => {\n\tconst [currMenuNo, setCurrMenuNo] = useState(0);\n\n\tconst [navProps, setNavProps] = useState({\n\t\ttitle: \"웅캬캬캬\",\n\t\tbreadcrumb: [\"Life\", \"Day\"],\n\t});\n\n\tconst [menuList, setMenuList] = useState([\n\t\t{\n\t\t\tmenuCode: 0,\n\t\t\tmenuName: \"메뉴0\",\n\t\t\tsubMenu: undefined,\n\t\t},\n\t\t{\n\t\t\tmenuCode: 1,\n\t\t\tmenuName: \"메뉴1\",\n\t\t\tsubMenu: undefined,\n\t\t},\n\t\t{\n\t\t\tmenuCode: 2,\n\t\t\tmenuName: \"메뉴2\",\n\t\t\tsubMenu: [\n\t\t\t\t{ menuCode: 21, menuName: \"서브메뉴21\" },\n\t\t\t\t{ menuCode: 22, menuName: \"서브메뉴22\" },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tmenuCode: 3,\n\t\t\tmenuName: \"메뉴3\",\n\t\t\tsubMenu: undefined,\n\t\t},\n\t]);\n\n\tconst breadcrumbList = navProps.breadcrumb.map((item, index) => {\n\t\treturn (\n\t\t\t<Breadcrumb.Item\n\t\t\t\tkey={`breadCrumbItem-${index}`}\n\t\t\t\tonClick={() => console.log(`${item} clicked`)}\n\t\t\t>\n\t\t\t\t{item}\n\t\t\t</Breadcrumb.Item>\n\t\t);\n\t});\n\n\tconst selMenuEvent = (val) => {\n\t\tconsole.log(val);\n\t};\n\n\treturn (\n\t\t<Layout style={{ minHeight: \"100vh\" }}>\n\t\t\t<SiderMenu\n\t\t\t\tcurrMenuNo={currMenuNo}\n\t\t\t\tselMenuEvent={selMenuEvent}\n\t\t\t\tmenuList={menuList}\n\t\t\t/>\n\t\t\t<Layout style={{ background: \"#fff\" }}>\n\t\t\t\t<Header style={{ background: \"#fff\", paddingLeft: 24 }}>\n\t\t\t\t\t<h1>웅캬캬캬</h1>\n\t\t\t\t</Header>\n\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\n\t\t\t\t\t<Breadcrumb style={{ margin: \"16px 0\" }}>\n\t\t\t\t\t\t{breadcrumbList}\n\t\t\t\t\t</Breadcrumb>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: \"#fff\",\n\t\t\t\t\t\t\tpadding: 24,\n\t\t\t\t\t\t\tminHeight: 360,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t뭘 좀 해볼까...\n\t\t\t\t\t</div>\n\t\t\t\t</Content>\n\t\t\t\t<Footer style={{ textAlign: \"center\" }}>안녕</Footer>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}